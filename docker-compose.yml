services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: always
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websocket.address=:3001"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Dashboard Traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - matchaNetwork

  mysql:
    image: mysql:latest
    container_name: mysql
    restart: always
    volumes:
      - db:/var/lib/mysql
    networks:
      - matchaNetwork
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  phpmyadmin:
    depends_on:
      - mysql
    image: phpmyadmin
    restart: always
    env_file:
      - ./.env
    environment:
      PMA_HOST: mysql
    networks:
      - matchaNetwork
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.phpmyadmin.rule=Host(`phpmyadmin.localhost`)"
      - "traefik.http.routers.phpmyadmin.entrypoints=web"
      - "traefik.http.services.phpmyadmin.loadbalancer.server.port=80"

  api:
    build:
      context: ./api/
      dockerfile: Dockerfile
    container_name: api
    restart: always
    volumes:
      - api:/app
    networks:
      - matchaNetwork
    depends_on:
      mysql:
        condition: service_healthy
    env_file:
      - ./.env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`localhost`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.services.api.loadbalancer.server.port=3000"
      - "traefik.http.middlewares.api-stripprefix.stripprefix.prefixes=/api"
      - "traefik.http.routers.api.middlewares=api-stripprefix"

  websocket:
    build:
      context: ./websocket/
    container_name: websocket
    restart: always
    volumes:
      - websocket:/app
    networks:
      - matchaNetwork
    depends_on:
      - mysql
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.websocket.rule=Host(`localhost`) && PathPrefix(`/ws`)"
      - "traefik.http.routers.websocket.entrypoints=web"
      - "traefik.http.services.websocket.loadbalancer.server.port=3001"
      - "traefik.http.middlewares.ws-stripprefix.stripprefix.prefixes=/ws"
      - "traefik.http.routers.websocket.middlewares=ws-stripprefix"

  frontend:
    build:
      context: ./frontend/
    container_name: frontend
    restart: always
    volumes:
      - frontend:/app
    networks:
      - matchaNetwork
    depends_on:
      - mysql
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`localhost`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=1212"

volumes:
  frontend:
    driver: local
    name: frontend
    driver_opts:
      o: bind
      type: none
      device: ./frontend
  websocket:
    driver: local
    name: websocket
    driver_opts:
      o: bind
      type: none
      device: ./websocket
  api:
    driver: local
    name: api
    driver_opts:
      o: bind
      type: none
      device: ./api
  db:
    name: db

networks:
  matchaNetwork:
    driver: bridge
    name: matchaNetwork