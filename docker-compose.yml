services:
  mysql:
    image: mysql:latest
    container_name: mysql
    restart: always
    volumes:
      - db:/var/lib/mysql
    networks:
      - matchaNetwork
    env_file:
      - ./.env
    ports:
      - "3005:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10

  phpmyadmin:
    depends_on:
      - mysql
    image: phpmyadmin
    restart: always
    ports:
      - "8090:80"
    env_file:
      - ./.env
    environment:
      PMA_HOST: mysql
    networks:
      - matchaNetwork

  api:
    build:
      context: ./api/
      dockerfile: Dockerfile
    container_name: api
    restart: always
    volumes:
      - api:/app
    ports:
      - 3000:3000
    networks:
      - matchaNetwork
    depends_on:
      mysql:
        condition: service_healthy
    env_file:
      - ./.env

  websocket:
    build:
      context: ./websocket/
#    image: node:22.11
    container_name: websocket
    restart: always
    volumes:
      - websocket:/app
    ports:
      - 3001:3001
    expose:
      - '3001'
    networks:
      - matchaNetwork
    depends_on:
      - mysql
#    working_dir: /app
#    command: sh -c "npm install && chmod -R 777 node_modules && npm start"

  frontend_dev:
    image: node:22.11
    container_name: frontend
    restart: always
    volumes:
      - frontend:/app
    expose:
      - '1212'
    ports:
      - 1212:1212
    networks:
      - matchaNetwork
    working_dir: /app
    command: sh -c "npm install && chmod -R 777 node_modules && npm run dev"
    profiles: ["dev"]

  frontend:
    image: node:22.11
    container_name: frontend
    volumes:
      - frontend:/app
    networks:
      - matchaNetwork
    working_dir: /app
    command: sh -c "npm install && chmod -R 777 node_modules && npm run build"
    profiles: ["prod"]

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - "1212:1212"
    depends_on:
      - frontend
    volumes:
      - ./frontend/dist:/tmp/dist
      - ./nginx/conf.d:/etc/nginx/conf.d
#    command: /bin/sh -c "cp -R /tmp/dist/* /usr/share/nginx/html && chown -R nginx:nginx /usr/share/nginx/html && chmod -R 755 /usr/share/nginx/html && nginx -g 'daemon off;'"
    command: /bin/sh -c "
      echo 'Waiting to frontend build...';
      while [ ! -f /tmp/dist/index.html ]; do
      echo 'Waiting to frontend build...';
      sleep 2;
      done;
      echo 'Build finished, running of Nginx...';
      cp -R /tmp/dist/* /usr/share/nginx/html &&
      chown -R nginx:nginx /usr/share/nginx/html &&
      chmod -R 755 /usr/share/nginx/html &&
      nginx -g 'daemon off;'
      "
    profiles: ["prod"]

volumes:
  frontend:
    driver: local
    name: frontend
    driver_opts:
      o: bind
      type: none
      device: ./frontend
  websocket:
    driver: local
    name: websocket
    driver_opts:
      o: bind
      type: none
      device: ./websocket
  api:
    driver: local
    name: api
    driver_opts:
      o: bind
      type: none
      device: ./api
  db:
    name: db

networks:
  matchaNetwork:
    driver: bridge
    name: matchaNetwork